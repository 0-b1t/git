#!/bin/sh
# Announcement message skelton
#
branch=${1?branch}
previous=${2?previous}
commit=${3-"$1"}

relname=$(git describe "$commit") &&
vername=$(expr "$relname" : 'v\(.*\)') || exit $?

git rev-parse --verify "$previous" >/dev/null || exit $?

case "$branch" in
maint)
	kind="The latest maintenance release" ;;
mainto/* | maint-[0-9]*)
	kind="A maintenance release" ;;
master)
	kind="The latest feature release" ;;
esac

case "$vername" in
*-rc[0-9]*)
	rpmroot=testing
	vername=$(echo "$vername" | tr "-" ".")
	case "$vername" in
	*-rc0)
		kind="An early preview"
		;;
	*)
		kind="A release candidate"
		;;
	esac
	for_testing=" for testing"
	;;
*)
	for_testing=
	rpmroot='RPMS/$arch'
	;;
esac

cat <<EOF
To: git@vger.kernel.org
Cc: Linux Kernel <linux-kernel@vger.kernel.org>
Bcc: lwn@lwn.net
Subject: [ANNOUNCE] Git $relname

EOF

fmt -68 <<EOF
$kind Git $relname is now available$for_testing at the usual places.
EOF

cat <<\EOF

The release tarballs are found at:

    http://code.google.com/p/git-core/downloads/list

and their SHA-1 checksums are:

EOF

if test -f git-$vername.sign
then
	sed -e '1,/^$/d' -e '/^-----BEGIN PGP SIGNATURE/,$d' git-$vername.sign
fi

cat <<EOF

The following public repositories all have a copy of the $relname
tag and the $branch branch that the tag points at:

  url = https://kernel.googlesource.com/pub/scm/git/git
  url = git://repo.or.cz/alt-git.git
  url = https://code.google.com/p/git-core/
  url = git://git.sourceforge.jp/gitroot/git-core/git.git
  url = git://git-core.git.sourceforge.net/gitroot/git-core/git-core
  url = https://github.com/gitster/git

EOF

test -n "$for_testing" ||
cat <<EOF
Also, http://www.kernel.org/pub/software/scm/git/ has copies of the
release tarballs.

EOF

RelNotes=$(git cat-file blob "${branch}:RelNotes") &&
git cat-file blob "${branch}:$RelNotes" |
case "$relname" in
*-rc[0-9]*)
	sed -e 's/^Git .* Release Notes$/& (draft)/'
	;;
*)
	cat
	;;
esac

cat <<EOF

----------------------------------------------------------------

Changes since $previous are as follows:

EOF

git log --no-merges "$previous".."$branch" |
git shortlog

