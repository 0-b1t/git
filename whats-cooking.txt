To: git@vger.kernel.org
Subject: What's cooking in git.git (Jan 2010, #09; Mon, 25)
X-master-at: e3f67d30b20e49d8fc3eefe819808cba7998b060
X-next-at: fbe713d5bd6c280a0b5838c6fffb700008ae456e

What's cooking in git.git (Jan 2010, #09; Mon, 25)
--------------------------------------------------

Here are the topics that have been cooking.  Commits prefixed with '-' are
only in 'pu' while commits prefixed with '+' are in 'next'.  The ones
marked with '.' do not appear in any of the integration branches, but I am
still holding onto them.

We are already past -rc0; I think jl/diff-submodule-ignore should be part
of 1.7.0-rc1, and I heard that early parts of jh/gitweb-cached are ready,
but perhaps needs the final round of clean-up.  I am not confident if we
can fix any potential fallouts before 1.7.0 if we merged other topics.

So while I expect some minor merges to 'master' yet to come but otherwise
this should be pretty much "it" from feature-set perspective.

Oh, gitk and git-gui may have further pull-requests before -rc1.

--------------------------------------------------
[New Topics]

* fk/threaded-grep (2010-01-25) 1 commit
 - Threaded grep
 (this branch uses jc/grep-q.)

400% performance gain on a 4-core box ;-)

* jc/grep-q (2010-01-25) 1 commit
 - grep: expose "status-only" feature via -q
 (this branch is used by fk/threaded-grep.)

* jl/diff-submodule-ignore (2010-01-24) 2 commits
  (merged to 'next' on 2010-01-25 at fbe713d)
 + Teach diff --submodule that modified submodule directory is dirty
 + git diff: Don't test submodule dirtiness with --ignore-submodules
 (this branch uses jc/ce-uptodate.)

--------------------------------------------------
[Cooking]

* jc/ce-uptodate (2010-01-24) 1 commit
  (merged to 'next' on 2010-01-25 at fbe713d)
 + Make ce_uptodate() trustworthy again
 (this branch is used by jl/diff-submodule-ignore.)

I think this and Jens Lehmann's follow-up patch to avoid calling
is_submodule_modified() are needed before 1.7.0

* cc/reset-keep (2010-01-19) 5 commits
 - reset: disallow using --keep when there are unmerged entries
 - reset: disallow "reset --keep" outside a work tree
 - Documentation: reset: describe new "--keep" option
 - reset: add test cases for "--keep" option
 - reset: add option "--keep" to "git reset"

I do not think I'd ever use this, and I am not convinced I can sell this
to users as a great new feature without confusing them unnecessarily, but
perhaps queuing it to pu to give it wider visibility may help somebody
coming up with a better way to defend the feature and introduce it to
users without confusing them than Christan nor I managed to.

* jh/notes (2010-01-17) 20 commits
 - builtin-gc: Teach the new --notes option to garbage-collect notes
 - Notes API: gc_notes(): Prune notes that belong to non-existing objects
 - t3305: Verify that removing notes triggers automatic fanout consolidation
 - builtin-notes: Teach -d option for deleting existing notes
 - Teach builtin-notes to remove empty notes
 - Teach notes code to properly preserve non-notes in the notes tree
 - t3305: Verify that adding many notes with git-notes triggers increased fanout
 - t3301: Verify successful annotation of non-commits
 - Builtin-ify git-notes
 - Refactor notes concatenation into a flexible interface for combining notes
 - Notes API: Allow multiple concurrent notes trees with new struct notes_tree
 - Notes API: write_notes_tree(): Store the notes tree in the database
 - Notes API: for_each_note(): Traverse the entire notes tree with a callback
 - Notes API: get_note(): Return the note annotating the given object
 - Notes API: remove_note(): Remove note objects from the notes tree structure
 - Notes API: add_note(): Add note objects to the internal notes tree structure
 - Notes API: init_notes(): Initialize the notes tree from the given notes ref
 - Add tests for checking correct handling of $GIT_NOTES_REF and core.notesRef
 - Notes API: get_commit_notes() -> format_note() + remove the commit restriction
 - Minor non-functional fixes to notes.c

The changes to test vector this series makes to t3301 breaks tests that
are in 'master', so 'pu' doesn't pass it.

* jh/gitweb-cached (2010-01-13) 9 commits
 - gitweb: File based caching layer (from git.kernel.org)
 - gitweb: Convert output to using indirect file handle
 - gitweb: cleanup error message produced by undefined $site_header
 - gitweb: add a get function to compliment print_sort_th
 - gitweb: add a get function to compliment print_local_time
 - gitweb: Makefile improvements
 - gitweb: Add option to force version match
 - gitweb: change die_error to take "extra" argument for extended die information
 - gitweb: Load checking

I know there is a series to split the later ones into smaller chunks that
are being discussed on the list, but they don't appear here.  I'd prefer
to pick the series up after all the dust from the discussion settles.

* jc/grep-author-all-match-implicit (2010-01-17) 1 commit
 - "log --author=me --grep=it" should find intersection, not union
